name: Export PDFs and Deploy

on:
  push:
    branches: ["main", "master"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-export:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit --no-fund

      - name: Build site (webpack)
        run: npm run build

      - name: Install Korean fonts
        run: |
          sudo apt-get update
          sudo apt-get install -y fonts-noto-cjk fonts-nanum fonts-nanum-coding fonts-nanum-extra
          sudo fc-cache -fv
          echo "Installed fonts:"
          fc-list | grep -i "noto\|nanum" | head -10

      - name: Setup Chrome for Puppeteer
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Export PDFs with Puppeteer
        run: npm run export-pdf
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
          PUPPETEER_EXECUTABLE_PATH: /usr/bin/google-chrome-stable
          # 한글 폰트 환경 변수 추가
          LANG: ko_KR.UTF-8
          LC_ALL: ko_KR.UTF-8

      - name: List generated PDF files
        run: |
          echo "📄 Generated PDF files:"
          ls -la ./dist/*.pdf
          echo ""
          echo "📊 PDF file count:"
          ls ./dist/*.pdf | wc -l

      - name: Move generated PDFs to root
        run: |
          cp ./dist/*.pdf ./

      - name: Inject cache-busting VERSION into links
        run: |
          set -e
          VERSION=$(date +%Y%m%d%H%M%S)
          echo "Using VERSION=$VERSION"
          echo "$VERSION" > .version.txt
          # Replace {{VERSION}} placeholders in root HTML files
          for f in ./*.html; do
            [ -f "$f" ] || continue
            sed -i "s/{{VERSION}}/$VERSION/g" "$f"
          done
          # Append ?v=VERSION to PDF links in root HTML files (avoid double-append by keeping source without ?v)
          for f in ./*.html; do
            [ -f "$f" ] || continue
            perl -0777 -pe "s/(href=\"[^\"]*\.pdf)(\")/\$1?v=$VERSION\2/g" -i "$f"
          done

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'  # 루트 디렉토리 전체 업로드

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-and-export
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
