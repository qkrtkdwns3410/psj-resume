# Deploy Resume & Portfolio to GitHub Pages (DISABLED - PDF workflow handles deployment)
name: Deploy Resume & Portfolio to Pages

on:
  # Disabled to prevent conflict with export-pdf.yml
  # push:
  #   branches: ["main", "master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build and deploy job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Verify files exist
        run: |
          echo "📄 Checking if required files exist..."
          if [ -f "resume.html" ]; then
            echo "✅ resume.html found"
          else
            echo "❌ resume.html not found"
            exit 1
          fi
          
          if [ -f "portfolio.html" ]; then
            echo "✅ portfolio.html found"
          else
            echo "❌ portfolio.html not found"
            exit 1
          fi
          
          if [ -f "intro-cards.html" ]; then
            echo "✅ intro-cards.html found"
          else
            echo "❌ intro-cards.html not found"
            exit 1
          fi
          
          echo "📁 All required files are present!"
        
      - name: Create index.html redirect
        run: |
          echo "🔄 Creating index.html redirect to resume.html..."
          cat > index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="ko">
          <head>
            <meta charset="utf-8">
            <title>박상준 - 개발자 이력서 & 포트폴리오</title>
            <meta http-equiv="refresh" content="3; url=resume.html">
            <link rel="canonical" href="resume.html">
            <style>
              body { 
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                text-align: center; 
                margin-top: 50px; 
                color: #333;
              }
              .container { max-width: 600px; margin: 0 auto; padding: 20px; }
              .nav-links { margin-top: 30px; }
              .nav-links a { 
                display: inline-block; 
                margin: 10px; 
                padding: 12px 24px; 
                text-decoration: none; 
                color: #667eea; 
                border: 2px solid #667eea; 
                border-radius: 8px; 
                transition: all 0.3s;
                font-weight: 500;
              }
              .nav-links a:hover { 
                background-color: #667eea; 
                color: white; 
              }
            </style>
          </head>
          <body>
            <div class="container">
              <h1>박상준 - 백엔드 개발자</h1>
              <p><span id="countdown">3</span>초 후 자동으로 이력서 페이지로 이동합니다.</p>
              <div class="nav-links">
                <a href="resume.html">📄 이력서 보기</a>
                <a href="portfolio.html">💼 포트폴리오 보기</a>
                <a href="intro-cards.html">🃏 자기소개 카드</a>
              </div>
            </div>
            
            <script>
              let countdown = 3;
              const countdownElement = document.getElementById('countdown');
              
              const timer = setInterval(() => {
                countdown--;
                if (countdown > 0) {
                  countdownElement.textContent = countdown;
                } else {
                  clearInterval(timer);
                  countdownElement.textContent = '0';
                  window.location.href = 'resume.html';
                }
              }, 1000);
            </script>
          </body>
          </html>
          EOF
          echo "✅ index.html created with navigation to all pages"
          echo "📄 Generated index.html content:"
          cat index.html
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository (static files including resume.html & portfolio.html)
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Display deployment info
        run: |
          echo "🚀 Deployment completed!"
          echo "📄 Resume: ${{ steps.deployment.outputs.page_url }}resume.html"
          echo "💼 Portfolio: ${{ steps.deployment.outputs.page_url }}portfolio.html"
          echo "🃏 Intro Cards: ${{ steps.deployment.outputs.page_url }}intro-cards.html"
          echo "🏠 Main: ${{ steps.deployment.outputs.page_url }}"
